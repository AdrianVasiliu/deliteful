/* claro/form/Common.css */
/*========================= common css =========================*/
.duiInputContainer {
  /* for positioning of placeHolder */

  overflow: hidden;
  float: none !important;
  /* needed to squeeze the INPUT in */

  position: relative;
}
.dj_ie input.duiTextBox,
.dj_ie .duiTextBox input {
  font-size: 100%;
}
.duiTextBox .duiSpinnerButtonContainer,
.duiTextBox .duiArrowButtonContainer,
.duiValidationTextBox .duiValidationContainer {
  float: right;
  text-align: center;
}
.duiTextBox input.duiInputField {
  /* override unreasonable user styling of buttons and icons */

  padding-left: 0 !important;
  padding-right: 0 !important;
}
.duiValidationTextBox .duiValidationContainer {
  display: none;
}
.dj_a11y .duiTextBoxReadOnly .duiInputField,
.dj_a11y .duiTextBoxReadOnly .duiButtonNode {
  border-style: outset !important;
  border-width: medium !important;
  border-color: #999 !important;
  color: #999 !important;
}
.dj_a11y .duiArrowButton {
  padding: 0 !important;
}
/* button inner contents - labels, icons etc. */
.duiButtonNode * {
  vertical-align: middle;
}
.duiSelect .duiArrowButtonInner,
.duiButtonNode .duiArrowButtonInner {
  /* the arrow icon node */

  background: no-repeat center;
  width: 12px;
  height: 12px;
  direction: ltr;
  /* needed by IE/RTL */

}
.duiButtonNode {
  /* Node that is acting as a button -- may or may not be a BUTTON element */

  border: 1px solid gray;
  margin: 0;
  line-height: normal;
  vertical-align: middle;
  text-align: center;
  white-space: nowrap;
}
.duiTextBox .duiButtonNode {
  border-width: 0;
}
.duiButtonNode,
.duiButtonNode * {
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}
.dj_ie .duiButtonNode {
  /* ensure hasLayout */

  zoom: 1;
}
.dj_ie .duiButtonNode button {
  /*
	disgusting hack to get rid of spurious padding around button elements
	on IE. MSIE is truly the web's boat anchor.
	*/

  overflow: visible;
}
div.duiArrowButton {
  float: right;
}
/******
	TextBox related.
	Everything that has an <input>
*******/
.duiTextBox {
  border: solid black 1px;
  width: 15em;
  /* need to set default size on outer node since inner nodes say <input style="width:100%"> and <td width=100%>.  user can override */

  vertical-align: middle;
}
.duiTextBoxReadOnly,
.duiTextBoxDisabled {
  color: gray;
}
.dj_safari .duiTextBoxDisabled input {
  color: #B0B0B0;
  /* because Safari lightens disabled input/textarea no matter what color you specify */

}
.dj_safari textarea.duiTextAreaDisabled {
  color: #333;
  /* because Safari lightens disabled input/textarea no matter what color you specify */

}
.dj_gecko .duiTextBoxReadOnly input.duiInputField,
.dj_gecko .duiTextBoxDisabled input {
  -moz-user-input: none;
  /* prevent focus of disabled textbox buttons */

}
.duiPlaceHolder {
  /* hint text that appears in a textbox until user starts typing */

  color: #AAAAAA;
  font-style: italic;
  position: absolute;
  top: 0;
  left: 0;
}
.duiTimeTextBox {
  width: 8em;
}
/* rules for webkit to deal with fuzzy blue focus border */
.duiTextBox input:focus {
  outline: none;
  /* blue fuzzy line looks wrong on combobox or something w/validation icon showing */

}
.duiTextBoxFocused {
  outline: 5px -webkit-focus-ring-color;
}
.duiSelect input,
.duiTextBox input {
  float: left;
  /* needed by IE to remove secret margin */

}
.duiInputInner {
  /* for when an <input> is embedded inside an inline-block <div> with a size and border */

  border: 0 !important;
  background-color: transparent !important;
  width: 100% !important;
  /* IE dislikes horizontal tweaking combined with width:100% so punish everyone for consistency */

  padding-left: 0 !important;
  padding-right: 0 !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
}
.dj_a11y .duiTextBox input {
  margin: 0 !important;
}
.duiValidationTextBoxError input.duiValidationInner,
.duiSelect input,
.duiTextBox input.duiArrowButtonInner {
  /* <input> used to display arrow icon/validation icon, or in arrow character in high contrast mode.
 * The css below is a trick to hide the character in non-high-contrast mode
 */

  text-indent: -2em !important;
  direction: ltr !important;
  text-align: left !important;
  height: auto !important;
}
.dj_ie .duiSelect input,
.dj_ie .duiTextBox input,
.dj_ie input.duiTextBox {
  overflow-y: visible;
  /* inputs need help expanding when padding is added or line-height is adjusted */

  line-height: normal;
  /* strict mode */

}
.duiSelect .duiSelectLabel span {
  line-height: 100%;
}
.dj_ie .duiSelect .duiSelectLabel {
  line-height: normal;
}
.dj_ie8 .duiSelect .duiSelectLabel,
.duiSelect td {
  line-height: 100%;
  /* IE7 problem where the icon is vertically way too low w/o this */

}
.dj_a11y input.duiValidationInner,
.dj_a11y input.duiArrowButtonInner {
  /* (in high contrast mode) revert rules from above so character displays */

  text-indent: 0 !important;
  width: 1em !important;
  color: black !important;
}
.duiValidationTextBoxError .duiValidationContainer {
  display: inline;
  cursor: default;
}
.duiComboBox .duiArrowButtonContainer {
  /* dividing line between input area and up/down button(s) for ComboBox */

  border-width: 0 0 0 1px !important;
  /* !important needed due to wayward ".theme .duiButtonNode" rules */

}
.duiComboBoxMenu {
  /* Drop down menu is implemented as <ul> <li/> <li/> ... but we don't want circles before each item */

  list-style-type: none;
}
.duiComboBox .duiButtonNode {
  border-width: 0;
}
/* TextArea, SimpleTextArea */
.duiTextArea {
  width: 100%;
  overflow-y: auto;
  /* w/out this IE's SimpleTextArea goes to overflow: scroll */

}
.duiTextArea[cols] {
  width: auto;
  /* SimpleTextArea cols */

}
.duiExpandingTextArea {
  /* for auto exanding textarea (called Textarea currently, rename for 2.0) don't want to display the grip to resize */

  resize: none;
}
.duiNumberTextBox {
  text-align: left;
  direction: ltr;
}
.duiNumberTextBox .duiInputInner {
  text-align: inherit;
  /* input */

}
/* 'duiTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */
.claro .duiTextBox,
.claro .duiInputInner {
  color: #000000;
}
.claro .duiValidationTextBoxError .duiValidationContainer {
  background-color: #d46464;
  background-image: url("../form/images/error.png");
  background-position: top center;
  border: solid #d46464 0;
  width: 9px;
}
.claro .duiTextBoxError .duiValidationContainer {
  border-left-width: 1px;
}
.claro .duiValidationTextBoxError .duiValidationIcon {
  width: 0;
  background-color: transparent;
  /* so the INPUT doesn't obscure the border in rtl+a11y */

}
/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * duiPlaceHolder is absolutely positioned, so padding set on duiInputField
 * won't affect it
 */
.claro .duiTextArea,
.claro .duiInputField .duiPlaceHolder {
  padding: 2px;
}
.claro .duiSelect .duiInputField,
.claro .duiTextBox .duiInputField {
  padding: 1px 2px;
}
.dj_gecko .claro .duiTextBox .duiInputInner,
.dj_webkit .claro .duiTextBox .duiInputInner {
  padding-left: 1px;
  padding-right: 1px;
}
.claro .duiSelect,
.claro .duiSelect .duiButtonContents,
.claro .duiTextBox,
.claro .duiTextBox .duiButtonNode {
  /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */

  border-color: #b5bcc7;
  -webkit-transition-property: background-color, border;
  -moz-transition-property: background-color, border;
  transition-property: background-color, border;
  -webkit-transition-duration: 0.35s;
  -moz-transition-duration: 0.35s;
  transition-duration: 0.35s;
}
.claro .duiSelect,
.claro .duiTextBox {
  background-color: #ffffff;
}
/* hover */
.claro .duiSelect:hover,
.claro .duiSelect:hover .duiButtonContents,
.claro .duiTextBox:hover,
.claro .duiTextBox:hover .duiButtonNode {
  border-color: #759dc0;
  -webkit-transition-duration: 0.25s;
  -moz-transition-duration: 0.25s;
  transition-duration: 0.25s;
}
.claro .duiTextBox:hover {
  background-color: #e5f2fe;
  background-image: -moz-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -webkit-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -o-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
}
/* error state */
.claro .duiSelectError,
.claro .duiSelectError .duiButtonContents,
.claro .duiTextBoxError,
.claro .duiTextBoxError .duiButtonNode {
  border-color: #d46464;
}
/* focused state */
.claro .duiSelectFocused,
.claro .duiSelectFocused .duiButtonContents,
.claro .duiTextBoxFocused,
.claro .duiTextBoxFocused .duiButtonNode {
  border-color: #759dc0;
  -webkit-transition-duration: 0.1s;
  -moz-transition-duration: 0.1s;
  transition-duration: 0.1s;
}
.claro .duiTextBoxFocused {
  background-color: #ffffff;
  background-image: -moz-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -webkit-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: -o-linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
  background-image: linear-gradient(rgba(127, 127, 127, 0.2) 0%, rgba(127, 127, 127, 0) 2px);
}
.claro .duiTextBoxFocused .duiInputContainer {
  background: #ffffff;
}
.claro .duiSelectErrorFocused,
.claro .duiSelectErrorFocused .duiButtonContents,
.claro .duiTextBoxErrorFocused,
.claro .duiTextBoxErrorFocused .duiButtonNode {
  border-color: #ce5050;
}
/* disabled state */
.claro .duiSelectDisabled,
.claro .duiSelectDisabled .duiButtonContents,
.claro .duiTextBoxDisabled,
.claro .duiTextBoxDisabled .duiButtonNode {
  border-color: #d3d3d3;
}
.claro .duiSelectDisabled,
.claro .duiTextBoxDisabled,
.claro .duiTextBoxDisabled .duiInputContainer {
  background-color: #efefef;
  background-image: none;
}
.claro .duiSelectDisabled,
.claro .duiTextBoxDisabled,
.claro .duiTextBoxDisabled .duiInputInner {
  color: #818181;
}
.dj_webkit .claro .duiDisabled input {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: #757575;
}
.dj_webkit .claro textarea.duiTextAreaDisabled {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: #1b1b1b;
}
/*========================= for special widgets =========================*/
/* Input boxes with an arrow (for a drop down) */
.claro .duiSelect .duiArrowButtonInner,
.claro .duiComboBox .duiArrowButtonInner {
  background-image: url("../form/images/commonFormArrows.png");
  background-position: -35px 53%;
  background-repeat: no-repeat;
  margin: 0;
  width: 16px;
}
.claro .duiComboBox .duiArrowButtonInner {
  border: 1px solid #ffffff;
}
.claro .duiToolbar .duiComboBox .duiArrowButtonInner {
  border: none;
}
.claro .duiToolbar .duiComboBox .duiArrowButtonInner {
  border: none;
}
/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.claro .duiSelectLabel,
.claro .duiTextBox .duiInputInner,
.claro .duiValidationTextBox .duiValidationContainer {
  padding: 1px 0;
}
.claro .duiComboBox .duiButtonNode {
  background-color: #efefef;
  background-image: -moz-linear-gradient(rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 100%);
  background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 100%);
  background-image: -o-linear-gradient(rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 100%);
  background-image: linear-gradient(rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 100%);
}
/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.claro .duiComboBoxOpenOnClick:hover .duiButtonNode,
.claro .duiComboBox .duiDownArrowButton:hover,
.claro .duiComboBoxFocused .duiArrowButton {
  background-color: #abd6ff;
}
.claro .duiComboBoxOpenOnClick:hover .duiArrowButtonInner,
.claro .duiComboBox .duiDownArrowButton:hover .duiArrowButtonInner {
  background-position: -70px 53%;
}
/* Arrow Button change when drop down is open */
.claro .duiComboBox .duiHasDropDownOpen {
  background-color: #7dbdfa;
  background-image: -moz-linear-gradient(rgba(190, 190, 190, 0.98) 0px, rgba(255, 255, 255, 0.65) 3px, rgba(255, 255, 255, 0) 100%);
  background-image: -webkit-linear-gradient(rgba(190, 190, 190, 0.98) 0px, rgba(255, 255, 255, 0.65) 3px, rgba(255, 255, 255, 0) 100%);
  background-image: -o-linear-gradient(rgba(190, 190, 190, 0.98) 0px, rgba(255, 255, 255, 0.65) 3px, rgba(255, 255, 255, 0) 100%);
  background-image: linear-gradient(rgba(190, 190, 190, 0.98) 0px, rgba(255, 255, 255, 0.65) 3px, rgba(255, 255, 255, 0) 100%);
  padding: 1px;
}
.claro .duiComboBox .duiHasDropDownOpen .duiArrowButtonInner {
  background-position: -70px 53%;
  border: 0 none;
}
/* disabled state */
.claro div.duiComboBoxDisabled .duiArrowButtonInner {
  /* specific selector set to override background-position setting from Button.js
	 * (.claro .duiComboBoxDisabled .duiArrowButtonInner) */

  background-position: 0 50%;
  background-color: #efefef;
}
.dj_borderbox .claro .duiComboBox .duiHasDropDownOpen .duiArrowButtonInner {
  width: 18px;
}
.dj_borderbox .claro .duiComboBoxFocused .duiHasDropDownOpen .duiArrowButtonInner {
  width: 16px;
}
